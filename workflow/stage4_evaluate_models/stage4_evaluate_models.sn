# -*- snakemake -*-
import os.path
import subprocess
from multiprocessing import cpu_count

def getTraits(filename):
	with open(filename) as f:
		firstline = f.readline().rstrip().split(" ")
	print("First_line: " + str(firstline))
	return(firstline)


####################################################################################################
##                                         CONFIGURATION                                          ##
####################################################################################################

DATA_PATH = "/proj/sens2017538/nobackup/ExomeSeq2ndRel/marcin/"
DATA_PLINK = DATA_PATH + "sntst_GRCh38_norel_rnd10000_chr22"
BIN_PATH = DATA_PATH + "experiments/saige_tests/extdata/"
PHENO_DATA = DATA_PATH + "experiments/5rare_0neg/simulated_phenotypes.txt"
CONTAINER = "/proj/sens2017538/nobackup/containers/r-saige_0.44.5--r36hb7e1c95_0.sif"
OUTPUT_PATH = DATA_PATH + "experiments/saige_tests/output/"

TRAITS = getTraits(PHENO_DATA)
IID = TRAITS[0]
TRAITS.pop(0)

####################################################################################################

# Targets
rule targets:
	input:
		expand(OUTPUT_PATH + "/trait_{trait}.SAIGE.bgen.txt", trait=TRAITS)
		#expand(OUTPUT_PATH + "/trait_{trait}.varianceRatio.txt", trait=TRAITS)
        	#null_model = ["trait_{trait}.varianceRatio.txt".format(trait=trait) for trait in TRAITS],
        	#grm = OUTPUT_PATH + "sparseGRM_relatednessCutoff_0.125_2000_randomMarkersUsed.sparseGRM.mtx",
        	#saige = expand(os.path.join(OUTPUT_PATH, 'trait_{trait}.SAIGE.bgen.txt'), trait = TRAITS)

rule run_SVA:
	input:
		varRatioFile =  OUTPUT_PATH + "/trait_{trait}.varianceRatio.txt",
		nullModelFile = OUTPUT_PATH + "/trait_{trait}.rda"
	output:
		outputFile = OUTPUT_PATH + "/trait_{trait}.SAIGE.bgen.txt"
	params:
		container_path = CONTAINER,
		bin_path = BIN_PATH
	shell:
		"""
	        echo "Fitting single variant association model for {wildcards.trait}..."
        	singularity run {params.container_path} Rscript {params.bin_path}/step2_SPAtests.R \
                	--bgenFile={DATA_PLINK}".bgen" \
                	--bgenFileIndex={DATA_PLINK}".bgen.bgi" \
                	--minMAF=0.0001 \
                	--minMAC=1 \
                	--sampleFile=${DATA_PLINK}.sample \
                	--GMMATmodelFile={input.nullModelFile} \
                	--varianceRatioFile={input.varRatioFile} \
                	--SAIGEOutputFile={output.outputFile} \
                	--numLinesOutput=2 \
                	--LOCO=FALSE \
                	--IsOutputAFinCaseCtrl=TRUE \
                	--IsDropMissingDosages=TRUE \
	                --weights.beta.rare=1,1 \
	                --weights.beta.common=1,1 \
        	        --kernel="linear"
		"""

rule fit_null_model:
	input:
		pheno = PHENO_DATA
	output:
		OUTPUT_PATH + "/trait_{trait}.varianceRatio.txt",
		OUTPUT_PATH + "/trait_{trait}.rda"
	params:
		input_prefix = DATA_PLINK,
		container_path = CONTAINER,
		bin_path = BIN_PATH,
		id_column = IID,
		out_prefix = os.path.join(OUTPUT_PATH, "trait_{trait}")
	shell:
		"""
		echo "Fitting null model for: {params.out_prefix}"
		singularity run {params.container_path} Rscript {params.bin_path}/step1_fitNULLGLMM.R \
                --plinkFile={params.input_prefix} \
                --phenoFile={input.pheno} \
                --phenoCol={wildcards.trait} \
                --sampleIDColinphenoFile={params.id_column} \
                --traitType=quantitative       \
                --invNormalize=TRUE     \
                --memoryChunk=2 \
                --outputPrefix={params.out_prefix} \
                --nThreads={threads} \
                --LOCO=FALSE \
                --tauInit=1,0 \
                --IsOverwriteVarianceRatioFile=TRUE
		"""
